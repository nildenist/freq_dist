def freq_dist(given_series, m):
    nt=[]
    import sys
    import pandas as pd
    import numpy as np
    import math
    if m is None:
        m=math.sqrt(len(given_series))+1
        C=((max(given_series)-min(given_series))/m)+1  
        hist, bins = np.histogram(given_series, bins=np.arange(min(given_series), max(given_series)+int(C),int(C)))
        bin_counts = list(zip(bins, bins[1:], hist)) # [(bin_start, bin_end, count), ... ]

        for bin_start, bin_end, count in bin_counts[:]:
            nt.append('{} â‰¤ x < {}: {}'.format(bin_start, bin_end, count))

        df=[]
        for i in range(len(nt)):
            d = {'classes': nt[i].split(':')[0],
                 'number_of_classes':nt[i].split(':')[1]}
            df.append(d)
        dataframe=pd.DataFrame(data=df)
        dataframe.iloc[:,1]=dataframe.iloc[:,1].astype(int)
        dataframe['freq_dist']=(dataframe.iloc[:,1]/dataframe.iloc[:,1].sum()).round(3)
        return dataframe
    else:
        if m > 10:
            m=math.sqrt(math.sqrt(len(given_series)))+1
        else:
            m=m

        C=((max(given_series)-min(given_series))/m)+1  
        hist, bins = np.histogram(given_series, bins=np.arange(min(given_series), max(given_series)+int(C),int(C)))
        bin_counts = list(zip(bins, bins[1:], hist)) # [(bin_start, bin_end, count), ... ]

        for bin_start, bin_end, count in bin_counts[:]:
            nt.append('{} â‰¤ x < {}: {}'.format(bin_start, bin_end, count))

        df=[]
        for i in range(len(nt)):
            d = {'classes': nt[i].split(':')[0],
                 'number_of_classes':nt[i].split(':')[1]}
            df.append(d)
        dataframe=pd.DataFrame(data=df)
        dataframe.iloc[:,1]=dataframe.iloc[:,1].astype(int)
        dataframe['freq_dist']=(dataframe.iloc[:,1]/dataframe.iloc[:,1].sum()).round(3)
        return dataframe
